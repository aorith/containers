name: debugpod

on:
  workflow_dispatch:
  schedule:
    - cron: "11 03 * * 5"

concurrency:
  group: ${{ github.workflow }}

env:
  NAME: "debugpod"
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
  DOCKER_BUILDKIT: "1"

jobs:
  build-and-push:
    name: Build and push container images
    strategy:
      matrix:
        include:
          - builder: ubuntu-latest
            platform: linux/amd64
          - builder: ubuntu-24.04-arm
            platform: linux/arm64
    runs-on: ${{ matrix.builder }}
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Check out source
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_REGISTRY }}/${{ env.NAME }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host

      - name: Build and Push
        id: build
        uses: docker/build-push-action@v6
        with:
          builder: ${{ steps.buildx.outputs.name }}
          platforms: ${{ matrix.platform }}
          context: ${{ env.NAME }}
          file: ${{ env.NAME }}/Containerfile
          cache-from: type=gha,scope=${{ github.workflow }}-${{ matrix.platform }}
          cache-to: type=gha,scope=${{ github.workflow }}-${{ matrix.platform }}
          no-cache: ${{ github.run_attempt != '1' }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ env.IMAGE_REGISTRY }}/${{ env.NAME }}
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true
          provenance: false

      - name: Export digest
        run: |
          platform=${{ matrix.platform }}
          PLATFORM_PAIR="${platform//\//-}" # example: linux-amd64

          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}" # example: sha256:613e5fc506b927aeaaa9c9c3dc26c0971686e566ce4cab4c4c3181f868061c60
          echo "$digest" > "${{ runner.temp }}/digests/${PLATFORM_PAIR}"

          echo "PLATFORM_PAIR=${PLATFORM_PAIR}" >> $GITHUB_ENV

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build-and-push
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          sha256_amd="$(head -1 ./linux-amd64)"
          sha256_arm="$(head -1 ./linux-arm64)"

          docker buildx imagetools create \
            -t "${{ env.IMAGE_REGISTRY }}/${{ env.NAME }}:latest" \
            "${{ env.IMAGE_REGISTRY }}/${{ env.NAME }}@${sha256_amd}" \
            "${{ env.IMAGE_REGISTRY }}/${{ env.NAME }}@${sha256_arm}"
