name: fbox
on:
  workflow_dispatch:
  schedule:
    - cron: "35 03 * * 2,4,6"
env:
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
jobs:
  push-ghcr:
    name: Build and push fbox image
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        major_version: [38]
        include:
          - image_name: "fbox"
          - is_stable: false
          - is_stable: true
            major_version: 38
    steps:
      # Checkout push-to-registry action GitHub repository
      - name: Checkout Push to Registry action
        uses: actions/checkout@v4
      - name: Generate tags
        id: generate-tags
        shell: bash
        run: |
          MAJOR_VERSION="${{ matrix.major_version }}"

          # Generate a timestamp for creating an image version history
          TIMESTAMP="$(date +%Y%m%d)"

          BUILD_TAGS=("${MAJOR_VERSION}" "${MAJOR_VERSION}-${TIMESTAMP}" "latest")
          if [[ "${{ matrix.is_stable }}" == "true" ]]; then
              BUILD_TAGS+=("stable")
          fi

          echo "Generated the following build tags: "
          for TAG in "${BUILD_TAGS[@]}"; do
              echo "${TAG}"
          done

          echo "alias_tags=${BUILD_TAGS[*]}" >> "$GITHUB_OUTPUT"
      # Build image using Buildah action
      - name: Build Image
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          context: ${{ matrix.image_name }}
          containerfiles: |
            ${{ matrix.image_name }}/Containerfile
          image: ${{ matrix.image_name }}
          tags: |
            ${{ steps.generate-tags.outputs.alias_tags }}
          build-args: |
            FEDORA_MAJOR_VERSION=${{ matrix.major_version }}
            CURRENT_VERSION_REF=${{ github.ref_name }}
          labels: ${{ steps.meta.outputs.labels }}
          oci: true
      # Push the image to GHCR (Image Registry)
      - name: Push To GHCR
        uses: redhat-actions/push-to-registry@v2
        id: push
        if: github.event_name != 'pull_request'
        env:
          REGISTRY_USER: ${{ github.actor }}
          REGISTRY_PASSWORD: ${{ github.token }}
        with:
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}
          extra-args: |
            --disable-content-trust
